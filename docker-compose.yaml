services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pet-care-plus-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/pet-care-plus?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    networks:
      - pet-care-plus-network
    depends_on:
      - postgres
      - redis
      - redis-commander

  postgres:
    image: postgres:13.11-bullseye
    container_name: pet-care-plus-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./var/logs/postgresql:/var/log/postgresql
    networks:
      - pet-care-plus-network

  redis:
    image: redis:7.0.12-alpine
    container_name: pet-care-plus-redis
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - pet-care-plus-network

  redis-commander:
    image: rediscommander/redis-commander:redis-commander-210
    restart: always
    container_name: pet-care-plus-redis-commander
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: 6379
      REDIS_USERNAME: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${HTTP_USER}
      HTTP_PASSWORD: ${HTTP_PASSWORD}
    ports:
      - "6380:8081"
    networks:
      - pet-care-plus-network

volumes:
  postgres-data:
  redis-data:

networks:
  pet-care-plus-network:
    driver: bridge
